[{"c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\index.js":"1","c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\App.js":"2","c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\components\\Selector.jsx":"3","c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\components\\CountSelector.jsx":"4","c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\reportWebVitals.js":"5","c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\components\\Play.jsx":"6"},{"size":547,"mtime":1610187395444,"results":"7","hashOfConfig":"8"},{"size":1473,"mtime":1610194411905,"results":"9","hashOfConfig":"8"},{"size":1109,"mtime":1610191489661,"results":"10","hashOfConfig":"8"},{"size":1987,"mtime":1610192827417,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"8"},{"size":4929,"mtime":1610192539948,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"gqpruq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\index.js",[],["29","30"],"c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\App.js",["31","32","33","34","35","36","37"],"c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\components\\Selector.jsx",["38","39"],"import React from \"react\";\r\nimport {Button} from \"reactstrap\";\r\n\r\nexport const SelectorInner = props => {\r\n    console.log(props);\r\n    return <p>{props.children}</p>\r\n}\r\n\r\nconst Selector = ({value, setValue, ...rest}) => {\r\n    let selection;\r\n    switch(value) {\r\n        case 0:\r\n            selection = \"Rock\";\r\n            break;\r\n        case 1:\r\n            selection = \"Paper\";\r\n            break;\r\n        case 2:\r\n            selection = \"Scissors\";\r\n            break;\r\n        case 3:\r\n            selection = \"Lizard\";\r\n            break;\r\n        case -1:\r\n            value = 4;\r\n        case 4:\r\n            selection = \"Spock\";\r\n            break;\r\n        case 5:\r\n            value = 0;\r\n        default:\r\n            value = 0;\r\n    }\r\n    return (\r\n        <div className=\"selector\">\r\n            <Button size=\"sm\" onClick={e => {setValue(value = (value - 1)%5)}}>&lt;-</Button>\r\n            <span className=\"selection\">{selection}</span>\r\n            <Button size=\"sm\" onClick={e => {setValue(value = (value + 1)%5)}}>-&gt;</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Selector;","c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\components\\CountSelector.jsx",[],"c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\reportWebVitals.js",[],"c:\\Users\\Dell\\source\\repos\\rockpapersracka\\src\\components\\Play.jsx",["40","41","42","43","44","45","46","47","48"],"import React from \"react\";\r\nimport { Button } from 'reactstrap';\r\nimport { Progress } from 'reactstrap';\r\n\r\nexport const PlayInner = props => {\r\n    console.log(props);\r\n    return <p>{props.children}</p>\r\n}\r\n\r\nconst Play = ({score, setScore, player, games, message, setMessage, isGO, setIsGO, ...rest}) => {\r\n    if(score[0] + score[1] < games) {\r\n        return (\r\n            <div className=\"play\">\r\n                <span className=\"message\">{message}</span>\r\n                <br/>\r\n                <Progress multi>\r\n                <Progress bar animated color=\"primary\" value={score[0]} max={games}>{score[0]}</Progress>\r\n                <Progress bar animated color=\"danger\" value={score[1]} max={games}>{score[1]}</Progress>\r\n                </Progress>\r\n                <br/>\r\n                <br/>\r\n                <Button size=\"sm\" onClick={e => {\r\n                    let random = Math.floor(Math.random() * (5));\r\n                    let winner;\r\n                    switch(random) {\r\n                        case 0:\r\n                            switch(player) {\r\n                                case 0:\r\n                                    winner = 3;\r\n                                    break;\r\n                                case 2:\r\n                                case 3:\r\n                                    winner = 1;\r\n                                    break;\r\n                                case 1:\r\n                                case 4:\r\n                                    winner = 0;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 1:\r\n                            switch(player) {\r\n                                case 1:\r\n                                    winner = 3;\r\n                                    break;\r\n                                case 0:\r\n                                case 4:\r\n                                    winner = 1;\r\n                                    break;\r\n                                case 2:\r\n                                case 3:\r\n                                    winner = 0;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            switch(player) {\r\n                                case 2:\r\n                                    winner = 3;\r\n                                    break;\r\n                                case 0:\r\n                                case 4:\r\n                                    winner = 0;\r\n                                    break;\r\n                                case 1:\r\n                                case 2:\r\n                                    winner = 1;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 3:\r\n                            switch(player) {\r\n                                case 3:\r\n                                    winner = 3;\r\n                                    break;\r\n                                case 0:\r\n                                case 2:\r\n                                    winner = 0;\r\n                                    break;\r\n                                case 1:\r\n                                case 4:\r\n                                    winner = 1;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                        case 4:\r\n                            switch(player) {\r\n                                case 4:\r\n                                    winner = 3;\r\n                                    break;\r\n                                case 1:\r\n                                case 3:\r\n                                    winner = 0;\r\n                                    break;\r\n                                case 0:\r\n                                case 2:\r\n                                    winner = 1;\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                    if(winner == 0) {\r\n                        setScore(score = [score[0] + 1, score[1]]);\r\n                        setMessage(message = \"You won\");\r\n                    }\r\n                    else if(winner == 1) {\r\n                        setScore(score = [score[0], score[1] + 1]);\r\n                        setMessage(message = \"The Devil won\");\r\n                    }\r\n                    else {\r\n                        setMessage(message = \"It's a tie\");\r\n                    }\r\n                    }}>Play</Button>\r\n            </div>\r\n        );\r\n    }\r\n    if(score[0] + score[1] > games) {\r\n        setScore(score = [games - score[1], score[1]]);\r\n    }\r\n    setIsGO(isGO = true);\r\n    return(<></>);\r\n    \r\n}\r\n\r\nexport default Play;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":19,"nodeType":"55","messageId":"56","endLine":3,"endColumn":32},{"ruleId":"53","severity":1,"message":"57","line":4,"column":24,"nodeType":"55","messageId":"56","endLine":4,"endColumn":42},{"ruleId":"53","severity":1,"message":"58","line":5,"column":15,"nodeType":"55","messageId":"56","endLine":5,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":18,"column":9,"nodeType":"61","endLine":18,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":18,"column":13,"nodeType":"64","endLine":18,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":38,"column":7,"nodeType":"61","endLine":38,"endColumn":44},{"ruleId":"62","severity":1,"message":"63","line":38,"column":11,"nodeType":"64","endLine":38,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":26,"column":9,"nodeType":"67","messageId":"68","endLine":28,"endColumn":19},{"ruleId":"65","severity":1,"message":"69","line":31,"column":9,"nodeType":"67","messageId":"70","endLine":32,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":25,"column":21,"nodeType":"73","messageId":"74","endLine":101,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":27,"column":29,"nodeType":"73","messageId":"74","endLine":39,"endColumn":30},{"ruleId":"71","severity":1,"message":"72","line":42,"column":29,"nodeType":"73","messageId":"74","endLine":54,"endColumn":30},{"ruleId":"71","severity":1,"message":"72","line":57,"column":29,"nodeType":"73","messageId":"74","endLine":69,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":66,"column":33,"nodeType":"67","messageId":"77","endLine":68,"endColumn":43},{"ruleId":"71","severity":1,"message":"72","line":72,"column":29,"nodeType":"73","messageId":"74","endLine":84,"endColumn":30},{"ruleId":"71","severity":1,"message":"72","line":87,"column":29,"nodeType":"73","messageId":"74","endLine":99,"endColumn":30},{"ruleId":"78","severity":1,"message":"79","line":102,"column":31,"nodeType":"80","messageId":"77","endLine":102,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":106,"column":36,"nodeType":"80","messageId":"77","endLine":106,"endColumn":38},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'SelectorInner' is defined but never used.","Identifier","unusedVar","'CountSelectorInner' is defined but never used.","'PlayInner' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-setsize is not supported by the role heading. This role is implicit on the element h1.","JSXOpeningElement","jsx-a11y/aria-proptypes","The value for aria-setsize must be a integer.","JSXAttribute","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]